name: "üèóÔ∏è Build Image to Branch (with Git LFS)"

on:
  workflow_dispatch:
    inputs:
      protocol:
        description: 'Remote Desktop Protocol'
        required: true
        type: choice
        options:
        - xrdp
        - vnc
      desktop_environment:
        description: 'Desktop Environment (DE)'
        required: true
        type: choice
        options:
        - xfce
        - gnome
        - kde
        - mate
        - cinnamon
        - lxqt

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üì¶ Build Docker image locally
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          load: true 
          tags: local-desktop:${{ github.event.inputs.protocol }}-${{ github.event.inputs.desktop_environment }}
          build-args: |
            PROTOCOL=${{ github.event.inputs.protocol }}
            DESKTOP_ENV=${{ github.event.inputs.desktop_environment }}

      - name: üíæ Save Docker image to a tarball
        run: |
          docker save -o image.tar local-desktop:${{ github.event.inputs.protocol }}-${{ github.event.inputs.desktop_environment }}
          echo "Image saved as image.tar"
          ls -lh image.tar

      - name: üöÄ Commit image.tar to branch using Git LFS
        run: |
          set -e
          BRANCH_NAME="images/${{ github.event.inputs.protocol }}-${{ github.event.inputs.desktop_environment }}"
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          git clone "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" ../repo-temp
          cd ../repo-temp
          
          # Install and configure Git LFS in our temporary clone
          git lfs install
          
          git checkout -B $BRANCH_NAME
          
          # Remove any old files
          git rm -rf . --ignore-unmatch
          
          # Move the new image tarball into the repo
          mv ../${{ github.workspace }}/image.tar .
          
          # Ensure .gitattributes is present and add all files
          # The .gitattributes from your main branch will be used if it exists
          git add .
          
          git commit -m "Update image for ${{ github.event.inputs.protocol }}-${{ github.event.inputs.desktop_environment }}"
          git push --force origin $BRANCH_NAME
          
          echo "‚úÖ Image pushed successfully to LFS on branch: $BRANCH_NAME"
